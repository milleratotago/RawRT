function [tbl, Sources, dfs, FactorPresence] = AnovaStructure(BetweenNames, BetweenLevels, WithinNames, WithinLevels, SubName, NSubsPerGroup, NReplications)
% Construct many columns for an ANOVA table with the indicated between- and within-Ss factors.
%
% Inputs:
%   BetweenNames : Cell array containing names of between-Ss factors, e.g., 'A' 'B'...
%   BetweenLevels: vector indicating the number of levels on each between-Ss factor.
%   WithinNames/WithinLevels: Same for within-Ss factors.
%   SubName: string name of subjects factor, e.g., 'S'
%   NSubsPerGroup: integer
%   NReplications: integer, minimum 1, number of observations in each condition per subject
%
% Outputs:
%   tbl: A table with rows named by sources and with columns for df (and more).
%   Sources: cell array listing the different sources in the ANOVA design.
%   df: vector showing the number of df for each source.
%   FactorPresence: cell array with each cell containing a string of 0/1's
%     to indicate which factor(s) are included in the source.
%

% NewJeff: omit levels, HaveReplication a switch, separate function to compute dfs.


HaveReplications = NReplications > 1;
if HaveReplications
    NReplicationSources = 1;
else
    NReplicationSources = 0;
end

ExptlNames = [BetweenNames WithinNames];
NBetween = numel(BetweenNames);
NWithin  = numel(WithinNames);
ExptlLevels = [BetweenLevels WithinLevels];
NExptlFactors = NBetween+NWithin;
NExptlSources = 2^NExptlFactors;  % Includes Mu
NRandomSources = 2^NWithin + NReplicationSources;       % Includes S
NSources = NExptlSources + NRandomSources + 1;  % Includes a source for the total, which will be added at the end
NGroups = prod(BetweenLevels);
Sources = cell(NSources,1);
df = zeros(NSources,1);
InvolvedFactors = cell(NSources,1);
ET = cell(NSources,1);
FactorIsWithin = [false(1,NBetween) true(1,NWithin)];

% Form the name of the subjects factor, including between-Ss factors (eg SAB)
% Warning: The name must match that generated by anovan.
dfSubs = NGroups*(NSubsPerGroup-1);
FullSubName = SubName;
if NBetween>0
    FullSubName = [FullSubName '('];
    for iFac=1:NBetween-1
        FullSubName = [FullSubName BetweenNames{iFac} ','];
    end
    FullSubName = [FullSubName BetweenNames{NBetween} ')'];
end

% Experimental sources:

df(1) = 1;   Sources{1} = 'Mu';  ET{1} = FullSubName;

FactorPresence = fliplr(dec2bin(1:(NExptlSources-1)));

for iSource=2:NExptlSources  % +/-1 to skip over mu
    InvolvedFactors{iSource} = find(FactorPresence(iSource-1,:)=='1');
    df(iSource) = prod(ExptlLevels(InvolvedFactors{iSource})-1);
    s = '';
    for jSrc = InvolvedFactors{iSource}
        s = [s '*' ExptlNames{jSrc}];
    end
    Sources{iSource} = s(2:end);  % [ExptlNames{InvolvedFactors{iSource}}];
    WithinFactors = '';
    for iFac=InvolvedFactors{iSource}
        if FactorIsWithin(iFac)
            WithinFactors = [WithinFactors '*' ExptlNames{iFac}];%#ok<AGROW>
        end
    end
    WithinFactors = WithinFactors(2:end);
    if numel(WithinFactors)>0
        ET{iSource} = [WithinFactors '*' FullSubName];
    else
        ET{iSource} = FullSubName;
    end
end

SourceIsFixed = [true(NExptlSources,1); false(NSources-NExptlSources,1)];

% Random sources:

df(NExptlSources+1) = dfSubs;   Sources{NExptlSources+1} = FullSubName;

FactorPresenceWit = fliplr(dec2bin(1:(NRandomSources-1)));

for iSource=2:NRandomSources-NReplicationSources
    TheseFactors2 = find(FactorPresenceWit(iSource-1,:)=='1');
    % +1 to skip over S
    df(iSource+NExptlSources) = prod(WithinLevels(TheseFactors2)-1)*dfSubs;
    s = '';
    for iFac=TheseFactors2
        s = [s '*' WithinNames{iFac}];
    end
    s = s(2:end);
    Sources{iSource+NExptlSources} = [s '*' FullSubName];
end

if HaveReplications
    df(end-1) = NGroups*NSubsPerGroup*prod(WithinLevels)*(NReplications-1);
    Sources{end-1} = 'Error';
    for iSource=NExptlSources+1:NSources-2
        ET{iSource} = 'Error';
    end
end

df(end) = sum(df(1:end-1));   Sources{end} = 'Total';

% Construct a column of characters indicating which factors are involved in each source.
tbl = table(df,SourceIsFixed,ET,InvolvedFactors,'RowNames',Sources);
tbl.FactorPresence = cell(height(tbl),1);
for iSource=1:NExptlSources-1
    tbl.FactorPresence{iSource+1} = FactorPresence(iSource,:);
end
tbl.FactorPresence{1} = tbl.FactorPresence{2};
tbl.FactorPresence{1}(1) = '0';

% Add a column for ETnum
tbl.ETnum = zeros(NSources,1);
for iSource=1:NSources
    ETrow = find(strcmp(tbl.Properties.RowNames,tbl.ET{iSource}));
    if numel(ETrow)>0
        tbl.ETnum(iSource) = ETrow(1);
    end
end

end
